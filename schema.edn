;; This first version of Navigator schema is intended to be installed in
;; VLACS' customized Moodle DB (postgres).
;; Our long-term plan is to migrate all our custom data from our
;; Moodle DB to Datomic, including this.

;; Conventions
;; ---------------------------------
;; * every table has an .id field that's a :bigserial
;; * any table that may need to share an ID with a third-party system has an id_sk field for this purpose
;; * FKs are named <table>_id.

;; TODO: see https://github.com/miner/herbert for schematizing this
{:tables
 {:comp {:cols [[:id :bigserial]
                ;; Idea: use metadata to mark the fields that, when changed, require a new _hist row?
                [:id_sk :varchar]
                [:name :varchar "NOT NULL"]
                [:description :varchar]
                [:version :varchar "NOT NULL"]

                ;; status examples: active, archived
                [:status :varchar "NOT NULL"]
                [:duration_rating_days :bigint]
                [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
         :primary-key [:id]
         :indices {:comp_id_sk_ux [[:id_sk] :unique]
                   :comp_name_ix [[:name]]
                   :comp_nameversion_ix [[:name :version] :unique]
                   :comp_desc_ix [[:description]]
                   :comp_tx_ix [[:date_created]]}}
  :comp_tag {:cols [[:id :bigserial]
                    [:name :varchar "NOT NULL"]
                    [:description :varchar]
                    [:version :varchar "NOT NULL"]
                    [:type :varchar "NOT NULL"]
                    [:isrequestable :bool "NOT NULL" "DEFAULT 'f'"]

                    ;; It seems like we'll want icons for some things.
                    ;; No idea yet how to handle them.
                    [:icon :varchar]

                    ;; do we need both :isfinal and :status?
                    ;; status examples: active, archived
                    [:status :varchar "NOT NULL"]
                    [:isfinal :bool "NOT NULL" "DEFAULT 'f'"]
                    [:date_finalized "TIMESTAMP WITH TIME ZONE"]
                    [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
             :primary-key [:id]
             :indices {:comp_tag_name_ix [[:name]]
                       :comp_tag_name_version_ix [[:name :version] :unique]
                       :comp_tag_type_ix [[:type]]}}
  :comp2comp_tag {:cols [[:id :bigserial]
                         [:comp_id :bigint]
                         [:comp_tag_id :bigint]

                         ;; What does this tag mean for this competency?
                         ;; Is this just a label (default), or does
                         ;; this competency satisfy or
                         ;; partially-satisfy this tag?
                         ;; :rel_type

                         [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
                  :primary-key [:comp_id :comp_tag_id]
                  :foreign-keys {:comp2comp_tag_c_fk [:comp_id :comp :id]
                                 :comp2comp_tag_t_fk [:comp_tag_id :comp_tag :id]}
                  :indices {:comp2comp_tag_id_ux [[:id]]}}

  ;; comp_tag2parent represents a directed acyclic graph
  ;; This graph is used for two purposes:
  ;; 1. Suggest additional tags in the tagging UI. When tagging a
  ;;    competency, parents of that tag should also be suggested to
  ;;    the user.
  ;; 2. When a user navigates through the competency map, selecting a
  ;;    parent tag should be logically equivalent to adding
  ;;    tag:<tag-name-version> to the search-filter, and the results
  ;;    shown should be:
  ;;    a) any tags that are children of <tag-name-version> that have competencies
  ;;    b) any competencies tagged with <tag-name-version> that are
  ;;       not tagged by a child of <tag-name-version>
  :comp_tag2parent {:cols [[:id :bigserial]
                           [:child_comp_tag_id :bigint]
                           [:parent_comp_tag_id :bigint]
                           [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
                    :primary-key [:child_comp_tag_id :parent_comp_tag_id]
                    :foreign-keys {:comp_tag2parent_c_fk [:child_comp_tag_id :comp_tag :id]
                                   :comp_tag2parent_p_fk [:parent_comp_tag_id :comp_tag :id]}
                    :indices {:comp_tag2parent_id_ux [[:id]]}}
  
  ;; example contexts: competency-map, transcript
  :comp_tag_disp_ctx {:cols [[:id :bigserial]
                             [:name :varchar "NOT NULL"]
                             [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
                      :primary-key [:id]}
  :comp_tag_disp_ctx2comp_tag {:cols [[:id :bigserial]
                                      [:comp_tag_disp_ctx_id :bigint]
                                      [:comp_tag_id :bigint]]
                               :primary-key [:comp_tag_disp_ctx_id :comp_tag_id]
                               :foreign-keys {:comp_tag_disp_ctx2comp_tag_ctdc_fk
                                              [:comp_tag_disp_ctx_id :comp_tag_disp_ctx :id]
                                              :comp_tag_disp_ctx2comp_tag_ct_fk
                                              [:comp_tag_id :comp_tag :id]}
                               :indices {:comp_tag_disp_ctx2comp_tag_id_ux [[:id] :unique]}}

  ;; All of VLACS old competencies will be represented in the
  ;; perf_asmt table in order to show that students use[d] them to
  ;; demonstrate competency.
  :perf_asmt {:cols [[:id :bigserial]
                     [:id_sk :varchar]
                     [:name :varchar]
                     [:version :varchar "NOT NULL"]
                     [:type :varchar "NOT NULL"]
                     [:duration_rating_days :bigint]
                     [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
              :primary-key [:id]
              :indices {:perf_asmt_nvt_ux [[:name :version :type] :unique]}}
  :comp2perf_asmt {:cols [[:id :bigserial]
                          [:comp_id :bigint]
                          [:perf_asmt_id :bigint]
                          [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
                   :primary-key [:comp_id :perf_asmt_id]
                   :indices {:comp2perf_asmt_id_ux [[:id] :unique]}
                   :foreign-keys {:comp2perf_asmt_c_fk [:comp_id :comp :id]
                                  :comp2perf_asmt_pa_fk [:perf_asmt_id :perf_asmt :id]}}

  ;; This table is deliberately NOT called "enrollment", but it
  ;; represents a very similar relation.
  ;; For now, we're using classroom_enrolment to track status.
  :user2comp {:cols [[:id :bigserial]

                     [:sis_user_id :bigint]
                     [:comp_id :bigint]
                     [:start_date "TIMESTAMP WITH TIME ZONE"]
                     [:iscomplete :bool "NOT NULL" "DEFAULT 'f'"]

                     ;; In case we need to reach in and say "this one is done."
                     [:isoverridden :bool "NOT NULL" "DEFAULT 'f'"]
                     [:completion_date "TIMESTAMP WITH TIME ZONE"]
                     [:proposed_completion_date "TIMESTAMP WITH TIME ZONE"]
                     [:current_score :varchar]
                     [:final_score :varchar]

                     ;; If the :final_score is numeric, we need to know the scale.
                     [:score_denominator :bigint]

                     ;; Examples:
                     ;; numeric
                     ;; letter
                     ;; pass-fail
                     ;; qualitative
                     [:score_type :varchar]
                     [:qualitative_notes :text]

                     ;; NOTE: no status field here; use our current
                     ;; enrollments table for status for now.

                     [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]

              ;; Note that a user may have more than one relationship
              ;; to a comp, if she started and then decided to hold
              ;; off and take it much later.
              :primary-key [:sis_user_id :comp_id :start_date]
              :indices {:user2comp_id_ux [[:id] :unique]
                        :user2comp_u_ix [[:sis_user_id]]
                        :user2comp_c_ix [[:comp_id]]}
              :foreign-keys {:user2comp_u_fk [:sis_user_id :mdl_sis_user :sis_user_id]
                             :user2comp_c_fk [:comp_id :comp :id]}}
  :config {:cols [[:id :bigserial]
                  [:key :varchar "NOT NULL"]
                  [:value :varchar]
                  [:date_created "TIMESTAMP WITH TIME ZONE" "NOT NULL" "DEFAULT CURRENT_TIMESTAMP"]]
           :primary-key [:id]
           :indices {:config_key_ux [[:key] :unique]
                     :config_value_ix [[:value]]
                     :config_date_ix [[:date_created]]}}}}
